#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.1 on Sun May 27 00:32:36 2018
#

from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import wx
import wx.grid
import sys
import os

from os import path, pardir
current_dir = path.abspath(path.dirname(__file__))  # Dir of script
parent_dir  = path.abspath(path.join(current_dir, pardir))  # Parent dir of script
icon_dir    = path.join(parent_dir, "icons")
sys.path.append(path.join(parent_dir, "Filesystem"))
from Params import Params
from ImportImgSeg import ImportImgSeg
import UndoRedo
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade
from typing import Any


# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class wxImportDialog(wx.Frame):
    def __init__(self, *args, **kwds):

        ##
        ##
        [self.parent, self.u_info] = kwds.pop('sim_name')
        ##
        ##

        # begin wxGlade: ImportImagesSegments.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((800, 200))
        self.p1 = wx.Panel(self, wx.ID_ANY)
        self.p2 = wx.Panel(self, wx.ID_ANY)
        self.SourceImageFolder = wx.TextCtrl(self.p2, 1, "")
        self.SourceSegmentationFolder = wx.TextCtrl(self.p2, 2, "")
        self.DestinationMojoFolder = wx.TextCtrl(self.p2, 3, "")
        self.ok = wx.Button(self.p2, wx.ID_OK, "")
        self.p3 = wx.Panel(self, wx.ID_ANY)
        self.BrowseImage = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.BrowseSementation = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.BrowseMojo = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.cancel = wx.Button(self.p3, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.ExecuteImport, self.ok)
        self.Bind(wx.EVT_BUTTON, self.BrowseImageFolder, self.BrowseImage)
        self.Bind(wx.EVT_BUTTON, self.BrowseSegmentationFolder, self.BrowseSementation)
        self.Bind(wx.EVT_BUTTON, self.BrowseMojoFolder, self.BrowseMojo)
        self.Bind(wx.EVT_BUTTON, self.Cancel, self.cancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ImportImagesSegments.__set_properties
        self.SetTitle("Import Images & Segments")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap(  path.join(icon_dir, "Mojo2_16.png")  , wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.p1.SetMinSize((180, 1000))
        self.SourceImageFolder.SetMinSize((426, 26))
        self.SourceSegmentationFolder.SetMinSize((426, 26))
        self.DestinationMojoFolder.SetMinSize((426, 26))
        self.ok.SetMinSize((88, 26))
        self.p2.SetMinSize((544, 2000))
        self.BrowseImage.SetMinSize((88, 26))
        self.BrowseSementation.SetMinSize((88, 26))
        self.BrowseMojo.SetMinSize((88, 26))
        self.cancel.SetMinSize((86, 26))
        self.p3.SetMinSize((100, 1500))
        # end wxGlade

        ###
        ###
        self.SourceImageFolder.SetValue( self.u_info.files_path )
        self.SourceSegmentationFolder.SetValue( self.u_info.files_path )
        self.DestinationMojoFolder.SetValue( self.u_info.files_path )
        ###
        ###

    def __do_layout(self):
        # begin wxGlade: ImportImagesSegments.__do_layout
        sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.s3 = wx.BoxSizer(wx.VERTICAL)
        s2 = wx.BoxSizer(wx.VERTICAL)
        s1 = wx.BoxSizer(wx.VERTICAL)
        TextImportImageFolder = wx.StaticText(self.p1, wx.ID_ANY, "Source Image Folder\n(TIFF/PNG)")
        TextImportImageFolder.SetMinSize((180, 30))
        s1.Add(TextImportImageFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        TextSourceSegmentationFolder = wx.StaticText(self.p1, wx.ID_ANY, "Source Segmentation Folder\n(TIFF/PNG)")
        TextSourceSegmentationFolder.SetMinSize((180, 30))
        s1.Add(TextSourceSegmentationFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        TextImportMojoFolder = wx.StaticText(self.p1, wx.ID_ANY, "Destination Mojo Folder")
        TextImportMojoFolder.SetMinSize((180, 30))
        s1.Add(TextImportMojoFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        self.p1.SetSizer(s1)
        sizer.Add(self.p1, 0, 0, 0)
        s2.Add(self.SourceImageFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.SourceSegmentationFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.DestinationMojoFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.ok, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.p2.SetSizer(s2)
        sizer.Add(self.p2, 1, 0, 0)
        self.s3.Add(self.BrowseImage, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.BrowseSementation, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.BrowseMojo, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.cancel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.p3.SetSizer(self.s3)
        sizer.Add(self.p3, 0, 0, 0)
        self.SetSizer(sizer)
        self.Layout()
        # end wxGlade

        # http://wxpython-users.1045709.n5.nabble.com/parameter-passing-Question-td2338603.html

    def BrowseImageFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.SourceImageFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Images Folder", dpath,
                                          wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_input_images = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.SourceImageFolder.SetValue(dir_input_images)
        return True

    def BrowseSegmentationFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.SourceSegmentationFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Segmentation Folder", dpath,
                                          wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_input_ids = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.SourceSegmentationFolder.SetValue(dir_input_ids)
        return True

    def BrowseMojoFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.DestinationMojoFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Mojo Import Folder", dpath,
                                          wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_mojo = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.DestinationMojoFolder.SetValue(dir_mojo)
        return True

    def ExecuteImport(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dir_input_images = self.SourceImageFolder.GetValue()
        dir_input_ids = self.SourceSegmentationFolder.GetValue()
        self.u_info.SetUserInfo(self.DestinationMojoFolder.GetValue())

        im = ImportImgSeg(self.u_info)
        Flag1 = im.images(dir_input_images)  ###
        Flag2 = im.ids(dir_input_ids)        ###
        print(Flag1)
        print(Flag2)
        if Flag1 == False or Flag2 == False:
            print('Dojo files were not correctly created.')
            return False
        print('Dojo files were created.')
        self.u_info.files_found = True
        self.Close()
        statusbar = ["Target Dojo folder: " + self.u_info.files_path]
        for i in range(len(statusbar)):
            self.parent.frame_statusbar.SetStatusText(statusbar[i], i)

        self.parent.LaunchDojo()
        return True

    def Cancel(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        self.Close()
        return False

