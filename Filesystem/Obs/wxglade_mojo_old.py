#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.1 on Tue May 22 21:46:15 2018
#

import wx
import wx.grid


import wxDialogs
import DefaultParams
import ImportImgSeg
import UndoRedo
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade
from typing import Any


class MojoControlPanel(wx.Frame):
    def __init__(self, *args, **kwds):

        ###
        ###
        self.UserInfo = DefaultParams.User()
        ###
        ###

        # begin wxGlade: MojoControlPanel.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((700, 500))
        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(0, "Import", "")
        self.Bind(wx.EVT_MENU, self.Import, id=0)
        wxglade_tmp_menu.Append(1, "Select Mojo File Folder", "")
        self.Bind(wx.EVT_MENU, self.SelectMojoFile, id=1)
        wxglade_tmp_menu.Append(2, "Copy Mojo Files to", "")
        self.Bind(wx.EVT_MENU, self.ExportMojoFiles, id=2)
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(3, "TIFF (16bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportImagesTiff16, id=3)
        wxglade_tmp_menu_sub.Append(4, "TIFF (8bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportImagesTiff8, id=4)
        wxglade_tmp_menu_sub.Append(5, "PNG (16bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportImagesPng16, id=5)
        wxglade_tmp_menu_sub.Append(6, "PNG (8bit, GrayScale)", "")
        self.Bind(wx.EVT_MENU, self.ExportImagesPng8, id=6)
        wxglade_tmp_menu.Append(wx.ID_ANY, "Export Images", wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu_sub = wx.Menu()
        wxglade_tmp_menu_sub.Append(7, "TIFF (16bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsTiff16, id=7)
        wxglade_tmp_menu_sub.Append(8, "TIFF (8bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsTiff8, id=8)
        wxglade_tmp_menu_sub.Append(9, "TIFF (8bit, Color)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsTiffRgb, id=9)
        wxglade_tmp_menu_sub.Append(10, "PNG (16bit, Grayscale)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsPng16, id=10)
        wxglade_tmp_menu_sub.Append(11, "PNG (8bit, GrayScale)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsPng8, id=11)
        wxglade_tmp_menu_sub.Append(12, "PNG (8bit, Color)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsPngRgb, id=12)
        wxglade_tmp_menu_sub.Append(13, "Numpy (32bit)", "")
        self.Bind(wx.EVT_MENU, self.ExportIdsNumpy, id=13)
        wxglade_tmp_menu.Append(wx.ID_ANY, "Export Segmenation", wxglade_tmp_menu_sub, "")
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(14, "Exit", "")
        self.Bind(wx.EVT_MENU, self.Exit, id=14)
        self.frame_menubar.Append(wxglade_tmp_menu, "File")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end
        self.MojoControlPanel_statusbar = self.CreateStatusBar(1)
        
        # Tool Bar
        self.frame_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL | wx.TB_HORZ_TEXT)
        self.SetToolBar(self.frame_toolbar)
        self.frame_toolbar.AddTool(100, "Execute", wx.Bitmap("..\\icons\\SegmentationCommit.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Execute 3D merge and 3D split", "")
        self.frame_toolbar.AddTool(101, "Undo", wx.Bitmap("..\\icons\\SegmentationUndo.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Undo", "")
        self.frame_toolbar.AddTool(102, "Redo", wx.Bitmap("..\\icons\\SegmentationRedo.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Redo", "")
        # Tool Bar end
        self.Index2_Sizer = wx.Panel(self, wx.ID_ANY)
        self.grid1 = wx.grid.Grid(self.Index2_Sizer, 1, size=(1, 1))
        self.ClearB1 = wx.Button(self.Index2_Sizer, 200, "Clear")
        self.grid2 = wx.grid.Grid(self.Index2_Sizer, 2, size=(1, 1))
        self.ClearB2 = wx.Button(self.Index2_Sizer, 201, "Clear")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.Execute, id=100)
        self.Bind(wx.EVT_TOOL, self.Undo, id=101)
        self.Bind(wx.EVT_TOOL, self.Redo, id=102)
        self.Bind(wx.grid.EVT_GRID_CMD_CELL_RIGHT_CLICK, self.AppendRowsCols1, id=1)
        self.Bind(wx.EVT_BUTTON, self.ClearMerge, id=200)
        self.Bind(wx.grid.EVT_GRID_CMD_CELL_RIGHT_CLICK, self.AppendRowsCols2, id=2)
        self.Bind(wx.EVT_BUTTON, self.ClearSplit, id=201)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MojoControlPanel.__set_properties
        self.SetTitle("Mojo Control Panel")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("..\\icons\\Mojo2_16.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.MojoControlPanel_statusbar.SetStatusWidths([-1])

        # statusbar fields
        MojoControlPanel_statusbar_fields = ["Target Mojo Folder: None"]
        for i in range(len(MojoControlPanel_statusbar_fields)):
            self.MojoControlPanel_statusbar.SetStatusText(MojoControlPanel_statusbar_fields[i], i)
        self.frame_toolbar.Realize()
        self.grid1.CreateGrid(10, 3)
        self.grid1.SetSelectionMode(wx.grid.Grid.SelectRows)
        self.grid1.SetColLabelValue(0, "Conn1")
        self.grid1.SetColLabelValue(1, "Conn2")
        self.grid1.SetColLabelValue(2, "Conn3")
        self.grid1.SetMinSize((316, 2000))
        self.ClearB1.SetDefault()
        self.grid2.CreateGrid(10, 1)
        self.grid2.SetSelectionMode(wx.grid.Grid.SelectRows)
        self.grid2.SetColLabelValue(0, "Target Id")
        self.ClearB2.SetDefault()
        self.Index2_Sizer.SetMinSize((316, 2000))
        # end wxGlade
        self.grid1.SetRowLabelSize(40)
        self.grid2.SetRowLabelSize(40)


    def __do_layout(self):
        # begin wxGlade: MojoControlPanel.__do_layout
        root = wx.BoxSizer(wx.VERTICAL)
        sizer1 = wx.BoxSizer(wx.HORIZONTAL)
        SizerC2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        SizerC1 = wx.BoxSizer(wx.VERTICAL)
        Index1_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        bitmap_1 = wx.StaticBitmap(self.Index2_Sizer, wx.ID_ANY, wx.Bitmap("..\\icons\\Merge3D_32.png", wx.BITMAP_TYPE_ANY))
        Index1_Sizer.Add(bitmap_1, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        label1 = wx.StaticText(self.Index2_Sizer, wx.ID_ANY, "3D Merge")
        Index1_Sizer.Add(label1, 1, wx.ALIGN_CENTER | wx.ALL, 5)
        SizerC1.Add(Index1_Sizer, 0, 0, 0)
        SizerC1.Add(self.grid1, 1, wx.ALL | wx.EXPAND, 5)
        SizerC1.Add(self.ClearB1, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        sizer1.Add(SizerC1, 1, wx.EXPAND, 0)
        bitmap_2 = wx.StaticBitmap(self.Index2_Sizer, wx.ID_ANY, wx.Bitmap("..\\icons\\Split3D_32.png", wx.BITMAP_TYPE_ANY))
        sizer_2.Add(bitmap_2, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        label1_copy = wx.StaticText(self.Index2_Sizer, wx.ID_ANY, "3D Split")
        sizer_2.Add(label1_copy, 1, wx.ALIGN_CENTER | wx.ALL, 5)
        SizerC2.Add(sizer_2, 0, 0, 0)
        SizerC2.Add(self.grid2, 1, wx.ALL | wx.EXPAND, 5)
        SizerC2.Add(self.ClearB2, 0, wx.ALIGN_CENTER | wx.ALL, 5)
        sizer1.Add(SizerC2, 1, wx.EXPAND, 0)
        self.Index2_Sizer.SetSizer(sizer1)
        root.Add(self.Index2_Sizer, 0, wx.EXPAND, 0)
        self.SetSizer(root)
        self.Layout()
        # end wxGlade

    def Import(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        # self.MousePosition = event.GetPosition()
        self.ImportImagesSegments = ImportImagesSegments(self, wx.ID_ANY, "",sim_name=[self, self.UserInfo])
        self.ImportImagesSegments.Show()

    def SelectMojoFile(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectMojoFolder(self,event,self.UserInfo)

    def ExportMojoFiles(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectMojoExportFolder(self, event, self.UserInfo)

    def ExportImagesTiff16(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectImageExportFolder(self, event, self.UserInfo,'tif16')

    def ExportImagesTiff8(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectImageExportFolder(self, event, self.UserInfo,'tif8')

    def ExportImagesPng16(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectImageExportFolder(self, event, self.UserInfo,'png16')

    def ExportImagesPng8(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectImageExportFolder(self, event, self.UserInfo,'png8')

    def ExportIdsTiff16(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'tif16')

    def ExportIdsTiff8(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'tif8')

    def ExportIdsTiffRgb(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'tifc')

    def ExportIdsPng16(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'png16')

    def ExportIdsPng8(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'png8')

    def ExportIdsPngRgb(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'pngc')

    def ExportIdsNumpy(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.SelectIdsExportFolder(self, event, self.UserInfo, 'npy')

    def Exit(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        self.Close()

    def Execute(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        wxDialogs.Execute(self, event)
    ##
    def Undo(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        UndoRedo.Undo( self.UserInfo )
        # print("Event handler 'Undo' not implemented!")
        # event.Skip()

    def Redo(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        UndoRedo.Redo(self.UserInfo)
        # print("Event handler 'Redo' not implemented!")
        # event.Skip()

    def ClearMerge(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        self.grid1.ClearGrid()

    def ClearSplit(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        self.grid2.ClearGrid()

    #  ----------------------------------------------------------------------
    # I want to move the AppendRowsCols1 to wxDialog.py
    #  ----------------------------------------------------------------------

    def AppendRowsCols1(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        if not hasattr(self, "popupID1"):
            self.popupID1 = wx.NewId()
            self.popupID2 = wx.NewId()
            self.Bind(wx.EVT_MENU, self.OnPopupOne1, id=self.popupID1)
            self.Bind(wx.EVT_MENU, self.OnPopupTwo1, id=self.popupID2)
        menu = wx.Menu()
        menu.Append(self.popupID1, "Add Row")
        menu.Append(self.popupID2, "Add Col")
        self.PopupMenu(menu) ###
        menu.Destroy()
    def OnPopupOne1(self, event):
        self.grid1.AppendRows(1)
    def OnPopupTwo1(self, event):
        self.grid1.AppendCols(1)
        n = self.grid1.GetNumberCols()
        self.grid1.SetColLabelValue(n-1, "Conn"+ str(n))


    #  ----------------------------------------------------------------------
    # I want to move the AppendRowsCols2 to wxDialog.py
    #  ----------------------------------------------------------------------

    def AppendRowsCols2(self, event):  # wxGlade: MojoControlPanel.<event_handler>
        if not hasattr(self, "popupID01"):
            self.popupID01 = wx.NewId()
            self.Bind(wx.EVT_MENU, self.OnPopupOne01, id=self.popupID01)
        menu = wx.Menu()
        menu.Append(self.popupID01, "Add Row")
        self.PopupMenu(menu)  ###
        menu.Destroy()
    def OnPopupOne01(self, event):
        self.grid2.AppendRows(1)





# end of class MojoControlPanel


class ImportImagesSegments(wx.Frame):
    def __init__(self, *args, **kwds):

        ##
        ##
        [self.parent, self.UserInfo] = kwds.pop('sim_name')
        ##
        ##

        # begin wxGlade: ImportImagesSegments.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        ###

        self.SetSize((837, 211))
        ## self.SetPosition( self.parent.MousePosition )
        self.p1 = wx.Panel(self, wx.ID_ANY)
        self.p2 = wx.Panel(self, wx.ID_ANY)
        self.SourceImageFolder = wx.TextCtrl(self.p2, 1, "")
        self.SourceSegmentationFolder = wx.TextCtrl(self.p2, 2, "")
        self.DestinationMojoFolder = wx.TextCtrl(self.p2, 3, "")
        self.ok = wx.Button(self.p2, wx.ID_OK, "")
        self.p3 = wx.Panel(self, wx.ID_ANY)
        self.BrowseImage = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.BrowseSementation = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.BrowseMojo = wx.Button(self.p3, wx.ID_ANY, "Browse...")
        self.cancel = wx.Button(self.p3, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.ExecuteImport, self.ok)
        self.Bind(wx.EVT_BUTTON, self.BrowseImageFolder, self.BrowseImage)
        self.Bind(wx.EVT_BUTTON, self.BrowseSegmentationFolder, self.BrowseSementation)
        self.Bind(wx.EVT_BUTTON, self.BrowseMojoFolder, self.BrowseMojo)
        self.Bind(wx.EVT_BUTTON, self.Cancel, self.cancel)
        # end wxGlade


    def __set_properties(self):
        # begin wxGlade: ImportImagesSegments.__set_properties
        self.SetTitle("Import Images & Segments")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap("..\\icons\\Mojo2_16.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.p1.SetMinSize((180, 1000))
        self.SourceImageFolder.SetMinSize((426, 26))
        self.SourceSegmentationFolder.SetMinSize((426, 26))
        self.DestinationMojoFolder.SetMinSize((426, 26))
        self.ok.SetMinSize((88, 26))
        self.p2.SetMinSize((544, 2000))
        self.BrowseImage.SetMinSize((88, 26))
        self.BrowseSementation.SetMinSize((88, 26))
        self.BrowseMojo.SetMinSize((88, 26))
        self.cancel.SetMinSize((86, 26))
        self.p3.SetMinSize((100, 1500))
        # end wxGlade

        ###
        ###
        self.SourceImageFolder.SetValue( self.UserInfo.mojo_files_path )
        self.SourceSegmentationFolder.SetValue( self.UserInfo.mojo_files_path )
        self.DestinationMojoFolder.SetValue( self.UserInfo.mojo_files_path )
        ###
        ###

    def __do_layout(self):
        # begin wxGlade: ImportImagesSegments.__do_layout
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        self.s3 = wx.BoxSizer(wx.VERTICAL)
        s2 = wx.BoxSizer(wx.VERTICAL)
        s1 = wx.BoxSizer(wx.VERTICAL)
        TextImportImageFolder = wx.StaticText(self.p1, wx.ID_ANY, "Source Image Folder\n(TIFF/PNG)")
        TextImportImageFolder.SetMinSize((180, 30))
        s1.Add(TextImportImageFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        TextSourceSegmentationFolder = wx.StaticText(self.p1, wx.ID_ANY, "Source Segmentation Folder\n(TIFF/PNG)")
        TextSourceSegmentationFolder.SetMinSize((180, 30))
        s1.Add(TextSourceSegmentationFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        TextImportMojoFolder = wx.StaticText(self.p1, wx.ID_ANY, "Destination Mojo Folder")
        TextImportMojoFolder.SetMinSize((180, 30))
        s1.Add(TextImportMojoFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL, 5)
        self.p1.SetSizer(s1)
        sizer_6.Add(self.p1, 0, 0, 0)
        s2.Add(self.SourceImageFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.SourceSegmentationFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.DestinationMojoFolder, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 7)
        s2.Add(self.ok, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.p2.SetSizer(s2)
        sizer_6.Add(self.p2, 1, 0, 0)
        self.s3.Add(self.BrowseImage, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.BrowseSementation, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.BrowseMojo, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.s3.Add(self.cancel, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALIGN_RIGHT | wx.ALL, 7)
        self.p3.SetSizer(self.s3)
        sizer_6.Add(self.p3, 0, 0, 0)
        self.SetSizer(sizer_6)
        self.Layout()
        # end wxGlade

# http://wxpython-users.1045709.n5.nabble.com/parameter-passing-Question-td2338603.html


    def BrowseImageFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.SourceImageFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Images Folder", dpath, wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_input_images = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.SourceImageFolder.SetValue(dir_input_images)
        return True

    def BrowseSegmentationFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.SourceSegmentationFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Segmentation Folder", dpath,  wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_input_ids = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.SourceSegmentationFolder.SetValue(dir_input_ids)
        return True

    def BrowseMojoFolder(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dpath = self.DestinationMojoFolder.GetValue()
        openFileDialog = wx.DirDialog(self, "Select Mojo Import Folder", dpath,  wx.DD_DEFAULT_STYLE | wx.DD_DIR_MUST_EXIST)
        openFileDialog.ShowModal()
        dir_mojo = openFileDialog.GetPath()
        openFileDialog.Destroy()
        self.DestinationMojoFolder.SetValue(dir_mojo)
        return True

    def ExecuteImport(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        dir_input_images = self.SourceImageFolder.GetValue()
        dir_input_ids    = self.SourceSegmentationFolder.GetValue()
        self.UserInfo.SetMojoPath(self.DestinationMojoFolder.GetValue())
        Flag1 = ImportImgSeg.images(self.UserInfo, dir_input_images)
        Flag2 = ImportImgSeg.ids(self.UserInfo, dir_input_ids)
        print Flag1
        print Flag2
        if Flag1 == False or Flag2 == False :
            print 'Mojo Files were not Correctly Created.'
            return False
        print 'Mojo Files were Created.'
        self.UserInfo.mojo_files_found = True
        self.Close()
        statusbar = ["Target Mojo Folder: " + self.UserInfo.mojo_files_path]
        for i in range(len(statusbar)):
            self.parent.MojoControlPanel_statusbar.SetStatusText(statusbar[i], i)
        return True

    def Cancel(self, event):  # wxGlade: ImportImagesSegments.<event_handler>
        self.Close()
        return False

# end of class ImportImagesSegments
